BASES DE DATOS
==================

DEFINICIÓN
FORMA DE ALMACENAR Y RECUPERAR DATOS DE FORMA EFICIENTE.
---

KEYS
PRIMARY KEY: COLUMNA DE VALORES ÚNICOS QUE DESCRIBEN UNA ENTRADA EN LA TABLA DE DATOS.
FOREIGN KEY: CLAVE PRIMARIA DE OTRA TABLA; PERMITE BASES DE DATOS RELACIONALES.
---

SQL
CREAR TABLA:

CREATE TABLE tbl (
id INT NOT NULL PRIMARY KEY, field1 VARCHAR(100),
field2 CHAR(32) NOT NULL
)

NULL NO ES LO MISMO QUE UN "0", "false", O UN STRING VACIO
SOLO REPRESENTA "NO VALUE" OR "MISSING VALUE"

CONSULTAR (LEER):
SELECT field1, field2 FROM tbl WHERE field3 = 'value'

INSERTAR:
       INSERT INTO tbl
           (field1, field2, field3) VALUES
           ('value1', 2, 'value3')

$query = sprintf("INSERT INTO tabla field1=%s, field2=%d, field3=%f",$string, $entero, $float);

ACTUALIZAR:
UPDATE tbl SET field1 = 'value1', field2 = 'value2' WHERE field3 = 'value3'

BORRAR DATOS:
- DELETE FROM tbl WHERE field1 = 'value1' 
- DROP TABLE tbl
- DROP DATABASE dbName

ORDENANDO (ORDER BY)
- ORDER BY ASCENDING (ASC) OR DESCENDING (DESC)
- SELECT * FROM tbl ORDER BY col DESC

AGRUPANDO (GROUP BY)
EN GENERAL, LAS COLUMNAS UTILIZADAS PARA AGRUPAR DEBEN ESTAR INCLUIDAS EN LA LISTA SELECCIONADA
SELECT col1, col2 FROM tbl GROUP BY col1
---

EXTRAS:
AVG() VALOR PROMEDIO SELECT AVG(Price) AS AveragePrice FROM Products;
COUNT(*) NUMERO DE REGISTROS 
DISTINCT (campo) DISGINGUIR ELEMENTOS (QUITAR DUPLICADOS)
MIN() VALOR MINIMO SELECT MIN(COLUMNA) FROM TABLE WHERE CONDITION;
MAX() VALOR MAXIMO
SUM() SUMA DE ELEMENTOS
---

JOIN
INNER JOIN
DEVUELVE TODAS LAS ENTRADAS EN TAB1 Y TAB2 VINCULADAS MEDIANTE EL
PRIMARY KEY / FOREING KEY, Y QUE CUMPLE LA CON LA CLÁUSULA.

SELECT * FROM tab1 INNER JOIN tab2
ON tab1.primkey = tab2.forkey WHERE tab1.col1 = 'value1'

LEFT JOIN
SELECT * FROM tab1 LEFT JOIN tab2
ON tab1.primkey = tab2.forkey WHERE tab1.col1 = 'value1'

RIGHT JOIN
SELECT * FROM tab1 RIGHT JOIN tab2
ON tab1.primkey = tab2.forkey WHERE tab2.col1 = 'value1'

ESCENARIOS PREPARADOS (SP)
- SIMILAR EN CONCEPTO A LAS PLANTILLAS: CONTIENE EL CÓDIGO COMPILADO UTILIZADO PARA EJECUTAR OPERACIONES COMUNES DE SQL

VENTAJAS
- CONSULTA SOLAMENTE PARSED UNA VEZ, PERO PERMITE EJECUCIONES MÚLTIPLES, CON LOS MISMOS O DIFERENTES PARÁMETROS (CONSIDERACIÓN DE RENDIMIENTO).

LOS PARÁMETROS RELACIONADOS NO NECESITAN SER CITADOS (CONSIDERACIÓN DE SEGURIDAD)

TRANSACCIONES
- COMBINA VARIAS CONSULTAS EJECUTÁNDOSE EN UNA SOLA.
- COMIENZA GENERALMENTE CON COMENZAR O COMENZAR LA TRANSACCIÓN
- EJECUTAR LA TRANSACCIÓN CON COMMIT
- CANCELAR LA TRANSACCIÓN CON ROLLBACK

PDO (PHP DATA OBJECTS EXTENSION)
<?php

$mbd = new PDO('mysql:host=localhost;dbname=prueba', $usuario, $contraseña);
PDO::prepare()
PDO::query();
PDO::exec();

//PDOStatement->setFetchMode()
PDOStatement::closeCursor()
PDOStatement::execute()
PDO::prepare()
PDOStatement::execute()

//TRANSACCIONES
PDO::beginTransaction()
PDO::commit()
PDO::rollBack()

?>
